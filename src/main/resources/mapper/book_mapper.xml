<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>

<mapper namespace="com.spring.main.dao.BookDAO">
		<resultMap type="reserveBook" id="reserveBook">
			<id column="reserveBookIdx" property="reserveBookIdx"/>
			<result column="id" property="id"/>
			<result column="reg_date" property="reg_date"/>
			<result column="bookIdx " property="bookIdx"/>
			<result column="RESERVEBOOKSTATE" property="bookState"/>
		</resultMap>
		
		<resultMap type="book" id="book">
			<id column="bookIdx" property="bookIdx"/>
			<result column="bookName" property="bookName"/>
			<result column="bookImg" property="bookImg"/>
			<result column="writer" property="writer"/>
			<result column="story" property="story"/>
			<result column="publisher" property="publisher"/>
			<result column="reg_date" property="reg_date"/>
			<result column="bookState" property="bookState"/>
			<collection property="reserveBookDTO" resultMap="reserveBook"/>
	</resultMap>
<!-- 	<select id="bookManageList" resultMap="book">
		SELECT
			b.BOOKIDX
			, b.BOOKNAME
			, b.BOOKIMG
			, b.WRITER
			, b.STORY
			, b.PUBLISHER
			, b.BOOKSTATE
			, r.RESERVEBOOKIDX
			, r.BOOKSTATE AS RESERVEBOOKSTATE
			, r.ID
			, r.REG_DATE
		FROM book b FULL OUTER JOIN reserveBook r
		ON b.bookidx = r.bookidx
        WHERE r.bookstate = 'R001' AND b.bookstate IN('B001','B002','B003','B004','B005','B006','B007') OR r.bookstate IS NULL
		ORDER BY b.bookIdx DESC, r.REG_DATE ASC
	</select> -->
	
	<select id="bookList" resultMap="book">
		SELECT b.bookIdx, b.bookName, b.writer, b.story, b.publisher, b.bookImg, b.bookState, r.reserveBookIdx, reserveBookState, r.id, r.reg_date, rnum
		FROM (
		    SELECT b.bookIdx, b.bookName, b.writer, b.story, b.publisher, b.bookImg, b.bookState,
		        ROW_NUMBER() OVER(ORDER BY b.bookIdx DESC) AS rnum 
		        FROM book b 
		        WHERE b.bookstate IN('B001','B002','B003','B004','B005','B006','B007')
		    ) B LEFT JOIN (
		    SELECT r.reserveBookIdx, r.bookidx, r.bookState AS reserveBookState, r.id, r.reg_date 
		    FROM reserveBook r 
		    WHERE r.bookstate = 'R001' OR r.bookstate IS NULL) R
		ON b.bookidx = r.bookidx
		WHERE rnum BETWEEN #{param1} AND #{param2}
	</select>
	
	<select id="allCnt" resultType="integer">
		SELECT COUNT(*) FROM book
	</select>
	
	
	<select id="normalBookFilter" parameterType="list" resultType="reserveBook">
		SELECT * FROM book WHERE bookstate IN
			<foreach collection="list" item="item" open="(" separator="," close=")">
					#{item}
			</foreach>
	</select>
	
	<update id="bookStateChange" parameterType="hashMap">
		UPDATE book SET bookState = #{bookState} WHERE bookIdx = #{bookIdx}
	</update>
	
<!-- 	<update id="reserveApproval" parameterType="hashMap">
		UPDATE reserveBook SET bookState = 'R002' WHERE bookIdx = #{bookIdx}
	</update> -->
	
	<insert id="userReserveNotification" parameterType="hashMap">
		INSERT INTO notification(noticeIdx, id, notype, content, mem_type)
			VALUES(noticeIdx_seq.NEXTVAL, #{id}, 'N005', #{bookName}||' 도서 예약이 가능합니다', '회원')
	</insert>
	
	<select id="bookManageDetail" resultType="book">
		SELECT bookIdx, bookName, bookImg, writer, publisher, story, bookState FROM book
			WHERE bookIdx = #{param1}
	</select>
	
	<select id="reserveCnt" resultType="int">
		SELECT COUNT(*) FROM reserveBook WHERE bookIdx = #{param1}
	</select>

	<insert id="insertRecommendBook" parameterType="hashMap">
		INSERT INTO recommendBook(bookIdx, reason) VALUES(#{bookIdx},#{reason})
	</insert>

	<insert id="bookInsert"
		useGeneratedKeys="true"
		keyProperty="bookIdx"
		keyColumn="bookIdx"
		parameterType="book"
	>
		INSERT INTO book(bookIdx, bookName, writer, publisher, story, bookImg)
			VALUES(bookIdx_seq.NEXTVAL, #{bookName}, #{writer}, #{publisher}, #{story}, #{bookImg})
	</insert>
	
	<insert id="hopeBookInsert" parameterType="hashMap">
		INSERT INTO hopebook(hopebooksnumber,id,hb_bookname,writer,publisher,hopereason)
		VALUES(HOPEBOOKSNUMBER_SEQ.NEXTVAL,#{userId},#{hopeBook},#{writer},#{publisher},#{reason})
	</insert>
	
	<select id="monthAllCnt" resultType="integer" parameterType="hashMap">
		SELECT COUNT(*) FROM book
		<where>
		<if test="month == calMonth">
		reg_date BETWEEN TRUNC(SYSDATE+1)-TO_CHAR(SYSDATE,'DD')
    	AND TRUNC(LAST_DAY(SYSDATE))+0.99999421
    	</if>
    	<if test="month == calMonth - 1">
		reg_date BETWEEN TRUNC(ADD_MONTHS(SYSDATE,-1)+1)-TO_CHAR(SYSDATE,'DD')
   		AND TRUNC(LAST_DAY(ADD_MONTHS(SYSDATE,-1)))+0.99999421
    	</if>
    	<if test="month == calMonth - 2">
		reg_date BETWEEN TRUNC(ADD_MONTHS(SYSDATE,-2)+1)-TO_CHAR(SYSDATE,'DD')
    	AND TRUNC(LAST_DAY(ADD_MONTHS(SYSDATE,-2)))+0.99999421
    	</if>
    	</where>
	</select>
	
	<select id="newBooksList" resultType="book" parameterType="hashMap">
		SELECT bookidx,bookimg,reg_date,rnum FROM (SELECT bookidx, bookimg,reg_date, ROW_NUMBER() OVER(ORDER BY bookidx DESC) AS rnum FROM book
		<where>
		<if test="month == calMonth">
		reg_date BETWEEN TRUNC(SYSDATE+1)-TO_CHAR(SYSDATE,'DD')
    	AND TRUNC(LAST_DAY(SYSDATE))+0.99999421 AND bookstate IN ('B001','B002','B003','B004'))
    	</if>
    	<if test="month == calMonth - 1">
		reg_date BETWEEN TRUNC(ADD_MONTHS(SYSDATE,-1)+1)-TO_CHAR(SYSDATE,'DD')
   		AND TRUNC(LAST_DAY(ADD_MONTHS(SYSDATE,-1)))+0.99999421 AND bookstate IN ('B001','B002','B003','B004'))
    	</if>
    	<if test="month == calMonth - 2">
		reg_date BETWEEN TRUNC(ADD_MONTHS(SYSDATE,-2)+1)-TO_CHAR(SYSDATE,'DD')
    	AND TRUNC(LAST_DAY(ADD_MONTHS(SYSDATE,-2)))+0.99999421 AND bookstate IN ('B001','B002','B003','B004'))
    	</if>
		</where>
		WHERE rnum between #{start} AND #{end} ORDER BY reg_date ASC
		
	</select>
	
	<select id="monthRecommendAll" resultType="integer" parameterType="hashMap">
		SELECT COUNT(*) FROM recommendbook
		<where>
		<if test="month == calMonth">
		reg_date BETWEEN TRUNC(SYSDATE+1)-TO_CHAR(SYSDATE,'DD')
    	AND TRUNC(LAST_DAY(SYSDATE))+0.99999421
    	</if>
    	</where>
	</select>
	
	<select id="recommendBooksList" resultType="recommendBook" parameterType="hashMap">
		SELECT b.bookidx, rnum, b.bookimg,b.story,r.reason,r.reg_date FROM 
    	(SELECT b.bookidx, b.bookimg, b.story FROM book b) B 
    	INNER JOIN
    	(SELECT r.bookidx, r.reg_date, r.reason,ROW_NUMBER() OVER(ORDER BY r.bookidx DESC) AS rnum FROM recommendbook r
		<where>
		<if test="month == calMonth">
		r.reg_date BETWEEN TRUNC(SYSDATE+1)-TO_CHAR(SYSDATE,'DD')
    	AND TRUNC(LAST_DAY(SYSDATE))+0.99999421) R
    	</if>
		</where>
		ON b.bookidx = r.bookidx
    	WHERE rnum between #{start} AND #{start} ORDER BY r.reg_date ASC
		
	</select>

</mapper>