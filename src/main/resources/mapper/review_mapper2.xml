<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>

<mapper namespace="com.spring.main.dao.ReviewDao2">
<!-- 	<select id="reviewList" resultType="review" parameterType="list">
		SELECT r.id, r.cnt, r.reg_date, r.reviewIdx,b.bookImg, b.bookName, b.writer, b.publisher FROM
			book b JOIN review r ON b.bookIdx=r.bookIdx ORDER BY reg_date DESC
	</select> -->
	
	<select id="review_AllCount" resultType="Integer">
		SELECT COUNT(*) FROM review 
	</select>
	
	<select id="reviewList" resultType="review" parameterType="list">
		SELECT * FROM (
			SELECT ROW_NUMBER() OVER(ORDER BY r.reg_date DESC) 
				AS rnum, r.id, r.cnt, r.reg_date, r.reviewIdx,b.bookImg, b.bookName, b.writer, b.publisher
			FROM book b JOIN review r ON b.bookIdx=r.bookIdx) WHERE rnum BETWEEN #{param1} AND #{param2}
	</select>

		<select id="reviewCom" resultType="review" parameterType="list">
		SELECT * FROM (
			SELECT ROW_NUMBER() OVER(ORDER BY r.cnt DESC) 
				AS rnum, r.id, r.cnt, r.reg_date, r.reviewIdx,b.bookImg, b.bookName, b.writer, b.publisher
			FROM book b JOIN review r ON b.bookIdx=r.bookIdx) WHERE rnum BETWEEN #{param1} AND #{param2}
	</select>
	
<!--  	<select id="reviewIdList" resultType="review" parameterType="list">
			SELECT r.id, r.cnt, r.reg_date, r.reviewIdx, b.bookImg, b.bookName, b.writer, b.publisher FROM
			book b JOIN review r ON b.bookIdx=r.bookIdx WHERE id=#{param1}
	</select>  -->
	
	<select id="reviewIdListPaging" resultType="review" parameterType="list">
		SELECT * FROM (
			SELECT ROW_NUMBER() OVER(ORDER BY r.reg_date DESC) 
				AS rnum, r.id, r.cnt, r.reg_date, r.reviewIdx,b.bookImg, b.bookName, b.writer, b.publisher
			FROM book b JOIN review r ON b.bookIdx=r.bookIdx WHERE r.id={param3}) WHERE rnum BETWEEN #{param1} AND #{param2}
	</select>
	
	<select id="review_IdAllCount" resultType="Integer">
		SELECT COUNT(*) FROM review WHERE id={param1}
	</select>
	
	<select id="reviewDetail" resultType="review">
			SELECT r.id, r.cnt, r.reviewIdx, r.blind_status,r.content, r.reg_date, b.bookImg, b.bookName, b.writer, b.publisher FROM
			book b JOIN review r ON b.bookIdx=r.bookIdx WHERE reviewIdx=#{param1}
	</select>

	<select id="reviewReportForm" resultType="review">
			SELECT reviewIdx, id FROM review WHERE reviewIdx=#{param1}
	</select>
	
 	<insert id="reviewReport" parameterType="review">
			INSERT INTO reviewreport(reportIdx, reviewIdx, reportId, reportReason,id) 
			VALUES (reportIdx_seq.NEXTVAL, #{reviewIdx}, #{reportId}, #{reportReason},#{id})
	</insert> 
	
	<select id="overReport" resultType="String">
			SELECT id FROM reviewreport WHERE id=#{id} AND reviewIdx=#{reviewIdx}
	</select>

 	<update id="reportCntUp">
			UPDATE member SET reviewreportcnt = reviewreportcnt+1 
			WHERE id in (SELECT reportid FROM reviewreport WHERE reviewIdx=#{reviewIdx})
	</update> 
	
	<select id="likeChk" resultType="Integer">
		SELECT count(*) as like_chk FROM reviewrecommend where reviewIdx=#{param1} AND id=#{param2}
	</select>
	
	<insert id="likeupdate">
		INSERT INTO reviewrecommend(reviewIdx, id) VALUES (#{param1}, #{param2})
	</insert>

	<delete id="likedelete">
		DELETE FROM reviewrecommend WHERE reviewIdx=#{param1} AND id=#{param2}
	</delete>
	
	<select id="like_cnt" resultType="Integer">
		SELECT cnt from review WHERE reviewIdx=#{param1}
	</select>

	<update id="upLike">
		UPDATE review SET cnt=cnt+1 WHERE reviewIdx=#{param1}
	</update>
	
	<update id="downLike">
		UPDATE review SET cnt=cnt-1 WHERE reviewIdx=#{param1}
	</update>

		
</mapper>